#if NETFX
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://NHibernate.Test", ConfigurationName="IDummyService")]
public interface IDummyService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://NHibernate.Test/IDummyService/MultiFactory", ReplyAction="http://NHibernate.Test/IDummyService/MultiFactoryResponse")]
    void MultiFactory();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://NHibernate.Test/IDummyService/MultiFactory", ReplyAction="http://NHibernate.Test/IDummyService/MultiFactoryResponse")]
    System.Threading.Tasks.Task MultiFactoryAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IDummyServiceChannel : IDummyService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DummyServiceClient : System.ServiceModel.ClientBase<IDummyService>, IDummyService
{
    
    public DummyServiceClient()
    {
    }
    
    public DummyServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public DummyServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public DummyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public DummyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void MultiFactory()
    {
        base.Channel.MultiFactory();
    }
    
    public System.Threading.Tasks.Task MultiFactoryAsync()
    {
        return base.Channel.MultiFactoryAsync();
    }
}
#endif
